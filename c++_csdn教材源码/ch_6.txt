//ex1
#include <iostream>
using namespace std;
class Point{
   private:
	   int x,y;
   public:
	   Point(int a,int b)
	   {x=a;y=b;cout<<"Point.."<<endl;}
	   void showxy()
	   {cout<<"x="<<x<<",y="<<y<<endl;}
	   ~Point()
	   {cout<<"delete Point"<<endl;}
};
class Rectangle:public Point
{
  private:
	  int H,W;
  public:
	  Rectangle(int a,int b,int h,int w):Point(a,b)
	  {H=h;W=w;cout<<"Rectangle..."<<endl;}
	  void show()
	  {cout<<"H="<<H<<",W="<<W<<endl;}
	  ~Rectangle()
	  {cout<<"delete rectangle"<<endl;}
};

void main()
{
    Rectangle r1(3,4,5,6);
	r1.showxy();
	r1.show();
}

//ex2
#include <iostream>
using namespace std;
class Point{
   protected:
	   int x,y;
   public:
	   Point(int a,int b)
	   {x=a;y=b;}
	   void show()
	   {cout<<"x="<<x<<",y="<<y<<endl;}
};
class Rectangle:public Point
{
  private:
	  int H,W;
  public:
	  Rectangle(int,int,int,int);
	 void show()
	  {cout<<"x="<<x<<",y="<<y<<",H="<<H<<",W="<<W<<endl;}
};
Rectangle::Rectangle(int a,int b,int h,int w):Point(a,b)
	  {H=h;W=w;}

void main()
{
	Point a(3,4);
    Rectangle r1(3,4,5,6);
	a.show();
    r1.show();
}
//ex3
#include <iostream>
using namespace std;
class Point{
   protected:
	   int x,y;
   public:
	   Point(int a,int b)
	   {x=a;y=b;}
	   void show()
	   {cout<<"x="<<x<<",y="<<y<<endl;}
};
class Rectangle:public Point
{
  private:
	  int H,W;
  public:
	  Rectangle(int,int,int,int);
	 void show()
	  {cout<<"x="<<x<<",y="<<y<<",H="<<H<<",W="<<W<<endl;}
};
Rectangle::Rectangle(int a,int b,int h,int w):Point(a,b)
	  {H=h;W=w;}

void main()
{
	Point a(1,2);
    Rectangle b(3,4,5,6);
	a.show();
    b.show();
	Point& ra=b;
	ra.show();
	Point* p=&b;
	p->show();
	Rectangle* pb=&b;
	pb->show();
	a=b;
	a.show();
}

//ex4
#include <iostream>
using namespace std;
class Point{
   private:
	   int x,y;
   public:
	   Point(int a,int b)
	   {x=a;y=b;}
	   void show()
	   {cout<<"x="<<x<<",y="<<y<<endl;}
};
class Rectangle:private Point
{
  private:
	  int H,W;
  public:
	  Rectangle(int,int,int,int);
	 void show()
	 {Point::show();cout<<"H="<<H<<",W="<<W<<endl;}
};
class Test:public Rectangle
{
 public:
	 Test(int a,int b,int h,int w):Rectangle(a,b,h,w){}
	 void show(){Rectangle::show;}

}

//ex5
#include <iostream>
using namespace std;
class A{
   private:
	   int a;
   public:
	   void setA(int x)
	   {a=x;}
	   void showA()
	   {cout<<"a="<<a<<endl;}
};
class B{
   private:
	   int b;
   public:
	   void setB(int x)
	   {b=x;}
	   void showB()
	   {cout<<"b="<<b<<endl;}
};
class C:public A,private B{
   private:
	   int c;
   public:
	   void setC(int x,int y)
	   {c=x;setB(y);}
	   void showC()
	   {showB();cout<<"c="<<c<<endl;}
};
void main()
{
	C obj;
	obj.setA(53);
	obj.showA();
	obj.setC(55,58);
	obj.showC();
}
//ex6
#include <iostream>
using namespace std;
class A{
     public:
		 void func()
		 {cout<<"a.func"<<endl;
		 }
};
class B{
   public:
	   void func()
	   {cout<<"b.func"<<endl;}
	   void gunc()
	   {cout<<"b.gunc"<<endl;}
};
class C:public A,public B{
   public:
	   void gunc()
	   {cout<<"c.gunc"<<endl;}
	 //  void hunc()  {func;}
	   void hun1(){A::func();}
	   void hun2(){A::func();}
};
void main()
{
	C obj;
	obj.A::func();
	obj.B::func();
	obj.B::gunc();
	obj.C::gunc();
	obj.gunc();
	obj.hun1();
	obj.hun2();
}